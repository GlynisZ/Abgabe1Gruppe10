@startuml Anwendungskern

!pragma useNewPackage
skinparam classAttributeIconSize 0
skinparam componentStyle uml2

interface Promise<T>

package shared {
  class "sendMail()" as sendMail
  hide sendMail circle
}

package song {
  package entity {
    class SongModel
    hide SongModel circle

    class "validateSong()" as validateSong
    hide validateSong circle

    interface SongData <<entity>>
  }

  package service #DDDDDD {
    SongService ..> Promise
    SongService ..> SongModel
    SongService ..> SongData
    SongService ..> validateSong
    SongService ..> sendMail

    class SongService << control >> {
      + async findById(id: string): Promise<SongData | undefined>
      + async find(query?: any): Promise<Array<SongData>>
      + async create(song: SongData): Promise<SongData>
      + async update(song: SongData, version: string): Promise<SongData>
      + async delete(id: string): Promise<boolean>
    }
  }
}

hide empty members

footer (c) Alexander Mader, Matthias Treise, Glynis Zolk

@enduml