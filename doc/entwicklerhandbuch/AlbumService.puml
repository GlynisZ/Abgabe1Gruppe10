@startuml Anwendungskern

!pragma useNewPackage
skinparam classAttributeIconSize 0
skinparam componentStyle uml2

interface Promise<T>

package shared {
  class "sendMail()" as sendMail
  hide sendMail circle
}

package album {
  package entity {
    class AlbumModel
    hide AlbumModel circle

    class "validateAlbum()" as validateAlbum
    hide validateAlbum circle

    interface AlbumData <<entity>>
  }

  package service #DDDDDD {
    AlbumService ..> Promise
    AlbumService ..> AlbumModel
    AlbumService ..> AlbumData
    AlbumService ..> validateAlbum
    AlbumService ..> sendMail

    class AlbumService << control >> {
      + async findById(id: string): Promise<AlbumData | undefined>
      + async find(query?: any): Promise<Array<AlbumData>>
      + async create(album: AlbumData): Promise<AlbumData>
      + async update(album: AlbumData, version: string): Promise<AlbumData>
      + async delete(id: string): Promise<boolean>
    }
  }
}

hide empty members

footer (c) Alexander Mader, Matthias Treiste, Glynis Zolk

@enduml